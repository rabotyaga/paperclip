var N=null,E="",T="t",U="u",searchIndex={};
var R=["api_v2_schema","papercliperror","EmitterState","Holds the state for your schema emitter.","working_dir","Working directory - the path in which the necessary…","ns_sep","Namespace separation string.","mod_prefix","Module prefix for using in generated code.","description","Description of this operation (if any), to be used for docs.","iterator","impl_repr","paperclip::v2","paperclip::v2::codegen","result","string","emittedunit","required","reference","data_type","properties","extra_props","Parameter","parameters","paperclip::v2::models","option","datatype","datatypeformat","schemarepr","btreemap","btreeset","format","defaultschemaraw","operation","definitions","`Emitter` represents the interface for generating the…","Definition","The associated `Schema` implementor.","Returns a reference to the underlying state.","emitterstate","generate","Entrypoint for emitter. Given an API spec, generate code…","def_ns_name","Returns an iterator of path components for the given…","def_name","Returns the CamelCase name for the given definition.","def_mod_path","Returns the module path (from working directory) for the…","pathbuf","build_def","Builds a given definition. Also takes a `bool` to specify…","paperclip","try_from","try_into","borrow_mut","type_id","to_owned","clone_into","borrow","typeid","paperclip::v2::codegen::object","to_string","paperclip::v2::im","equivalent","set_name","set_cyclic","is_cyclic","items_mut","additional_properties","additional_properties_mut","properties_mut","required_properties","cratemeta","parameter","httpmethod","parameterin","ordering","apiobject","default","apiobjectbuilder","genericapi","operationmap","version","operationprotocol","partial_cmp","formatter","deref_mut","backtrace","serialize","deserialize","PaperClipError","CrateMeta","EmittedUnit","ApiObject","OpRequirement","ObjectField","ApiObjectBuilder","Emitter","GenericApi","DefaultSchemaRaw","DefaultSchema","OperationMap","Operation","DataTypeFormat","SchemaRepr","ParameterIn","HttpMethod","OperationProtocol","TypedData","Apiv2Schema","Apiv2Operation","DefaultEmitter","ApiObjectImpl","ApiObjectBuilderImpl","RcRefCell","ArcRwLock","Wrapper for `actix_web::Resource`","Wrapper for `actix_web::Scope`","Wrapper for `actix_web::Route`","resource","default_service","to_async","paperclip_actix","configure","external_resource","paperclip_actix::web","into_iter","jsonconfig","pathconfig","queryconfig","payloadconfig","formconfig","payloaderror","extensions","httprequest","respond_to","from_request","payload","into_future","response","poll_next","headervalue","bytesmut","from_iter","into_buf","operations","update_operations","appservice","into_new_service","Splits the bytes into two at the given index.","with_capacity","split_off","Shortens the buffer, keeping the first `len` bytes and…","Shortens the buffer, dropping the first `cnt` bytes and…","Clears the buffer, removing all data.","extend_from_slice","Appends given bytes to this object.","headermap","Request extensions","extensions_mut","Mutable reference to a the request's extensions","urlgenerationerror","Generate url for named resource","socketaddr","connectioninfo","Get an application data stored with `App::data()` method…","responsebuilder","statuscode","responsehead","responsebody","into_inner","Deconstruct to an inner value","error_handler","Set custom error handler","querypayloaderror","Resource","ServiceConfig","OpenApiExt","Mountable","FormConfig","HttpRequest","HttpResponse","JsonConfig","PathConfig","PayloadConfig","QueryConfig"];
searchIndex["paperclip"]={"doc":"Paperclip is a OpenAPI code generator for efficient…","i":[[4,R[92],R[53],"Global error which encapsulates all related errors.",N,N],[13,"InvalidCodegenDirectory",E,"The given directory cannot be used for generating code.",0,N],[13,"UnsupportedOpenAPIVersion",E,"Currently, we only support OpenAPI v2, and eventually v3.",0,N],[13,"InvalidRefURI",E,"Failed to resolve the schema because an invalid URI was…",0,N],[13,"RelativePathNotUnique",E,"Paths listed in the spec must be unique.",0,N],[13,"MissingParametersInPath",E,E,0,N],[13,"InvalidHost",E,"Invalid host for URL.",0,N],[13,"InvalidBasePathURL",E,"Invalid base path URL.",0,N],[13,"MissingArrayItem",E,"The given schema object is an array, but the `items` field…",0,N],[13,"InvalidDefinitionName",E,"The name for the given definition is missing or invalid.",0,N],[13,"InvalidDefinitionPath",E,"A valid path cannot be obtained for the given definition.",0,N],[13,"MissingDefinition",E,"A definition has been referenced but it's missing.",0,N],[13,"UnsupportedParameterDefinition",E,"If a parameter uses a schema, then we expect it to exist…",0,N],[13,"MissingSchemaForBodyParameter",E,"If a parameter specifies body, then schema must be…",0,N],[13,"MissingParameterType",E,"If a parameter doesn't specify a body, then it must have a…",0,N],[13,"UnknownParameterType",E,"The type of this parameter is not known.",0,N],[13,"Io",E,"I/O errors.",0,N],[13,"Json",E,"JSON coding errors.",0,N],[13,"Yaml",E,"YAML coding errors.",0,N],[0,"v2",E,"Types and traits related to the OpenAPI v2 spec.",N,N],[3,R[2],R[14],R[3],N,N],[12,R[4],E,R[5],1,N],[12,R[6],E,R[7],1,N],[12,R[8],E,R[9],1,N],[5,"from_reader",E,"Deserialize the schema from the given reader. Currently,…",N,[[["r"]],[["api"],[R[16],["api",R[1]]],[R[1]]]]],[0,"codegen",E,"Code generation for OpenAPI v2.",N,N],[3,R[2],R[15],R[3],N,N],[12,R[4],E,R[5],1,N],[12,R[6],E,R[7],1,N],[12,R[8],E,R[9],1,N],[3,R[113],E,"Default emitter for anything that implements `Schema` trait.",N,N],[3,R[93],E,"Metadata for generating a crate.",N,N],[12,"name",E,"Name of the crate. If this is not specified, then the name…",2,N],[12,R[84],E,"Version (defaults to 0.1.0)",2,N],[12,"authors",E,"List of authors for this crate. Defaults to cargo's…",2,N],[12,"is_cli",E,"Whether we're planning to emit a CLI application.",2,N],[4,R[94],E,"Some \"thing\" emitted by the emitter.",N,N],[13,"Object",E,"Object represented as a Rust struct.",3,N],[13,"Known",E,"Some Rust type.",3,N],[13,"None",E,"Nothing to do.",3,N],[0,"object",E,"Simplified objects for codegen.",N,N],[3,R[95],R[62],"Represents a (simplified) Rust struct.",N,N],[12,"name",E,"Name of the struct (camel-cased).",4,N],[12,R[10],E,"Description for this object (if any), to be used for docs.",4,N],[12,"path",E,"Path to this object from (generated) root module.",4,N],[12,"fields",E,"List of fields.",4,N],[12,"paths",E,"Paths with operations which address this object.",4,N],[3,"PathOps",E,"Operations in a path.",N,N],[12,"req",E,"Operations for this object and their associated…",5,N],[12,"params",E,"Parameters required for all operations in this path.",5,N],[3,R[96],E,"Requirement for an object corresponding to some operation.",N,N],[12,"id",E,"Operation ID (if it's provided in the schema).",6,N],[12,R[10],E,R[11],6,N],[12,"params",E,"Parameters required for this operation.",6,N],[12,"body_required",E,"Whether the object itself is required (in body) for this…",6,N],[12,"listable",E,"Whether this operation returns a list of the associated…",6,N],[12,"response_ty_path",E,"Type path for this operation's response.",6,N],[3,R[24],E,"Represents some parameter somewhere (header, path, query,…",N,N],[12,"name",E,"Name of the parameter.",7,N],[12,R[10],E,R[11],7,N],[12,"ty_path",E,"Type of the parameter as a path.",7,N],[12,R[19],E,"Whether this parameter is required.",7,N],[12,"presence",E,"Where the parameter lives.",7,N],[3,R[97],E,"Represents a struct field.",N,N],[12,"name",E,"Name of the field.",8,N],[12,"ty_path",E,"Type of the field as a path.",8,N],[12,R[10],E,R[11],8,N],[12,"is_required",E,"Whether this field is required (i.e., not optional).",8,N],[12,"boxed",E,"Whether this field should be boxed.",8,N],[12,"children_req",E,"Requirements of the \"deepest\" child type in the given…",8,N],[3,R[114],E,"Represents the API object impl.",N,N],[3,R[98],E,"Represents a builder struct for some API object.",N,N],[3,R[115],E,"Represents the API object builder impl.",N,N],[11,"with_name",E,"Create an object with the given name.",4,[[["s"]],["self"]]],[11,R[13],E,"Returns a struct representing the impl for this object.",4,[[["self"]],["apiobjectimpl"]]],[11,"builders",E,"Returns the builders for this object.",4,[[["str"],["self"]],[[R[12]],["box",[R[12]]]]]],[11,R[13],E,"Returns a struct representing the impl for this builder.",9,[[["self"]],["apiobjectbuilderimpl"]]],[11,"con_fn_name",E,"Name of the constructor function which creates this builder.",9,[[["self"]],[[R[17]],[R[27],[R[17]]]]]],[11,"set_url",R[14],"Sets the base URL for this session.",1,[[["self"],["str"]],[["error"],[R[16],["error"]]]]],[11,"base_url",E,"Base URL for this API.",1,[[["self"]],[R[17]]]],[11,"set_meta",E,"Sets the crate metadata for this session.",1,[[["self"],[R[74]]]]],[8,R[99],R[15],R[37],N,N],[16,R[38],E,R[39],10,N],[10,"state",E,R[40],10,[[["self"]],[R[41]]]],[11,R[42],E,R[43],10,[[["self"],["api"]],[["error"],[R[16],["error"]]]]],[11,R[44],E,R[45],10,[[["self"]],[[R[16],["box","error"]],["error"],["box",[R[12]]]]]],[11,R[46],E,R[47],10,[[["self"]],[[R[17]],["error"],[R[16],[R[17],"error"]]]]],[11,R[48],E,R[49],10,[[["self"]],[[R[50]],["error"],[R[16],[R[50],"error"]]]]],[11,R[51],E,R[52],10,[[["self"],["bool"]],[["error"],[R[16],[R[18],"error"]],[R[18]]]]],[0,"im",R[14],"Interior mutability stuff.",N,N],[3,R[116],R[64],"Wrapper over `Rc<RefCell<T>>` to offer deserialization…",N,N],[3,R[117],E,"Wrapper over `Arc<RwLock<T>>` to offer deserialization…",N,N],[0,"models",R[14],"Models used by OpenAPI v2.",N,N],[3,R[100],R[26],"OpenAPI v2 spec generic over schema.",N,N],[12,"swagger",E,E,11,N],[12,R[36],E,E,11,N],[12,"paths",E,E,11,N],[12,"host",E,E,11,N],[12,"base_path",E,E,11,N],[3,R[101],E,"NOTE: This is the raw version i.e., it doesn't have smart…",N,N],[12,R[20],E,E,12,N],[12,"title",E,E,12,N],[12,R[10],E,E,12,N],[12,R[21],E,E,12,N],[12,R[33],E,E,12,N],[12,R[22],E,E,12,N],[12,"items",E,E,12,N],[12,R[23],E,E,12,N],[12,R[19],E,E,12,N],[3,R[102],E,"Default schema if your schema doesn't have any custom…",N,N],[12,R[20],E,E,13,N],[12,"title",E,E,13,N],[12,R[10],E,E,13,N],[12,R[21],E,E,13,N],[12,R[33],E,E,13,N],[12,R[22],E,E,13,N],[12,"items",E,E,13,N],[12,R[23],E,E,13,N],[12,R[19],E,E,13,N],[3,R[103],E,"Path item.",N,N],[12,"methods",E,E,14,N],[12,R[25],E,E,14,N],[3,R[24],E,"Request parameter.",N,N],[12,R[10],E,E,15,N],[12,"in_",E,E,15,N],[12,"name",E,E,15,N],[12,R[19],E,E,15,N],[12,"schema",E,E,15,N],[12,R[21],E,E,15,N],[12,R[33],E,E,15,N],[12,"items",E,E,15,N],[3,R[104],E,"An operation.",N,N],[12,"operation_id",E,E,16,N],[12,R[10],E,E,16,N],[12,"consumes",E,E,16,N],[12,"produces",E,E,16,N],[12,"schemes",E,E,16,N],[12,"responses",E,E,16,N],[12,R[25],E,E,16,N],[3,"Response",E,"HTTP response.",N,N],[12,R[10],E,E,17,N],[12,"schema",E,E,17,N],[4,"Version",E,"OpenAPI version.",N,N],[13,"V2",E,E,18,N],[4,"DataType",E,"Supported data types.",N,N],[13,"Integer",E,E,19,N],[13,"Number",E,E,19,N],[13,"String",E,E,19,N],[13,"Boolean",E,E,19,N],[13,"Array",E,E,19,N],[13,"Object",E,E,19,N],[13,"File",E,E,19,N],[4,R[105],E,"Supported data type formats.",N,N],[13,"Int32",E,E,20,N],[13,"Int64",E,E,20,N],[13,"Float",E,E,20,N],[13,"Double",E,E,20,N],[13,"Byte",E,E,20,N],[13,"Binary",E,E,20,N],[13,"Date",E,E,20,N],[13,"DateTime",E,E,20,N],[13,"Password",E,E,20,N],[13,"Other",E,E,20,N],[4,R[106],E,"Wrapper for schema. This uses `Arc<RwLock<S>>` for…",N,N],[13,"Raw",E,E,21,N],[13,"Resolved",E,E,21,N],[12,"new","paperclip::v2::models::SchemaRepr",E,21,N],[12,"old",E,E,21,N],[4,R[107],R[26],"The location of the parameter.",N,N],[13,"Query",E,E,22,N],[13,"Header",E,E,22,N],[13,"Path",E,E,22,N],[13,"FormData",E,E,22,N],[13,"Body",E,E,22,N],[4,R[108],E,"The HTTP method used for an operation.",N,N],[13,"Get",E,E,23,N],[13,"Put",E,E,23,N],[13,"Post",E,E,23,N],[13,"Delete",E,E,23,N],[13,"Options",E,E,23,N],[13,"Head",E,E,23,N],[13,"Patch",E,E,23,N],[4,R[109],E,"The protocol used for an operation.",N,N],[13,"Http",E,E,24,N],[13,"Https",E,E,24,N],[13,"Ws",E,E,24,N],[13,"Wss",E,E,24,N],[6,"Api",E,"OpenAPI v2 spec.",N,N],[11,"path_parameters_map",E,"Gets the parameters from the given path template and calls…",11,[[["str"]],[["str"],["cow",["str"]]]]],[11,"remove_refs",E,"Recursively removes all `$ref` values in this schema.",12,[[["self"]]]],[11,"retain_ref",E,"Recursively removes all properties other than `$ref` value…",12,[[["self"]]]],[11,"normalize",E,"Normalizes this operation map. - Collects and removes…",14,[[["self"]]]],[11,"set_parameter_names_from_path_template",E,"Overwrites the names of parameters in this operation using…",16,[[["self"],["str"]]]],[11,"get_description",E,"Fetch the description for this schema.",21,[[["self"]],[[R[17]],[R[27],[R[17]]]]]],[11,"check",E,"Checks if this parameter is valid.",15,[[["self"],["str"]],[["error"],[R[16],["error"]]]]],[0,"schema",R[14],E,N,N],[8,"Schema","paperclip::v2::schema","Interface for the `Schema` object.",N,N],[10,R[10],E,"Description for this schema, if any (`description` field).",25,[[["self"]],[[R[27],["str"]],["str"]]]],[10,R[20],E,"Reference to some other schema, if any (`$ref` field).",25,[[["self"]],[[R[27],["str"]],["str"]]]],[10,R[21],E,"Data type of this schema, if any (`type` field).",25,[[["self"]],[[R[28]],[R[27],[R[28]]]]]],[10,R[33],E,"Data type format used by this schema, if any (`format`…",25,[[["self"]],[[R[27],[R[29]]],[R[29]]]]],[10,"items",E,"Schema for array definitions, if any (`items` field).",25,[[["self"]],[[R[27],[R[30]]],[R[30]]]]],[10,R[69],E,"Mutable access to the `items` field, if it exists.",25,[[["self"]],[[R[27],[R[30]]],[R[30]]]]],[10,R[70],E,"Value schema for maps (`additional_properties` field).",25,[[["self"]],[[R[27],[R[30]]],[R[30]]]]],[10,R[71],E,"Mutable access to `additional_properties` field, if it's a…",25,[[["self"]],[[R[27],[R[30]]],[R[30]]]]],[10,R[22],E,"Map of names and schema for properties, if it's an object…",25,[[["self"]],[[R[31]],[R[27],[R[31]]]]]],[10,R[72],E,"Mutable access to `properties` field.",25,[[["self"]],[[R[31]],[R[27],[R[31]]]]]],[10,R[73],E,"Returns the required properties (if any) for this object.",25,[[["self"]],[[R[32]],[R[27],[R[32]]]]]],[10,R[67],E,"Set whether this definition is cyclic. This is done by the…",25,[[["self"],["bool"]]]],[10,R[68],E,"Returns whether this definition is cyclic.",25,[[["self"]],["bool"]]],[10,"name",E,"Name of this schema, if any.",25,[[["self"]],[[R[27],["str"]],["str"]]]],[10,R[66],E,"Sets the name for this schema. This is done by the resolver.",25,[[["self"],["str"]]]],[8,R[110],E,"Trait for returning OpenAPI data type and format for the…",N,N],[11,R[21],E,"The OpenAPI type for this implementor.",26,[[],[R[28]]]],[11,R[33],E,"The optional OpenAPI data format for this implementor.",26,[[],[[R[27],[R[29]]],[R[29]]]]],[8,R[111],E,"Represents a OpenAPI v2 schema convertible. This is…",N,N],[18,"NAME",E,"Name of this schema. This is the object's name.",27,N],[10,"raw_schema",E,"Returns the raw schema for this object.",27,[[],[R[34]]]],[11,"schema_with_ref",E,"Returns the schema with a reference (if this is an object).",27,[[],[R[34]]]],[8,R[112],E,"Represents a OpenAPI v2 operation convertible. This is…",N,N],[10,R[35],E,"Returns the definition for this operation.",28,[[],[[R[34]],[R[35],[R[34]]]]]],[10,R[36],E,"Returns the definitions used by this operation.",28,[[],[[R[17]],[R[34]],[R[31],[R[17],R[34]]]]]],[8,R[99],R[14],R[37],N,N],[16,R[38],E,R[39],10,N],[10,"state",E,R[40],10,[[["self"]],[R[41]]]],[11,R[42],R[15],R[43],10,[[["self"],["api"]],[["error"],[R[16],["error"]]]]],[11,R[44],E,R[45],10,[[["self"]],[[R[16],["box","error"]],["error"],["box",[R[12]]]]]],[11,R[46],E,R[47],10,[[["self"]],[[R[17]],["error"],[R[16],[R[17],"error"]]]]],[11,R[48],E,R[49],10,[[["self"]],[[R[50]],["error"],[R[16],[R[50],"error"]]]]],[11,R[51],E,R[52],10,[[["self"],["bool"]],[["error"],[R[16],[R[18],"error"]],[R[18]]]]],[11,"resolve",R[14],"Consumes this API schema, resolves the references and…",29,[[],[["api"],["error"],[R[16],["api","error"]]]]],[6,"PaperClipResult",R[53],"Generic result used throughout this library.",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[63],E,E,0,[[["self"]],[R[17]]]],[11,R[54],E,E,0,[[[U]],[R[16]]]],[11,R[55],E,E,0,[[],[R[16]]]],[11,R[56],E,E,0,[[["self"]],[T]]],[11,R[60],E,E,0,[[["self"]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[61]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",R[14],E,1,[[[T]],[T]]],[11,R[58],E,E,1,[[["self"]],[T]]],[11,R[59],E,E,1,[[[T],["self"]]]],[11,"into",E,E,1,[[],[U]]],[11,R[54],E,E,1,[[[U]],[R[16]]]],[11,R[55],E,E,1,[[],[R[16]]]],[11,R[56],E,E,1,[[["self"]],[T]]],[11,R[60],E,E,1,[[["self"]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[61]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"from",R[15],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[54],E,E,30,[[[U]],[R[16]]]],[11,R[55],E,E,30,[[],[R[16]]]],[11,R[56],E,E,30,[[["self"]],[T]]],[11,R[60],E,E,30,[[["self"]],[T]]],[11,R[57],E,E,30,[[["self"]],[R[61]]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[58],E,E,2,[[["self"]],[T]]],[11,R[59],E,E,2,[[[T],["self"]]]],[11,"into",E,E,2,[[],[U]]],[11,R[54],E,E,2,[[[U]],[R[16]]]],[11,R[55],E,E,2,[[],[R[16]]]],[11,R[56],E,E,2,[[["self"]],[T]]],[11,R[60],E,E,2,[[["self"]],[T]]],[11,R[57],E,E,2,[[["self"]],[R[61]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[54],E,E,3,[[[U]],[R[16]]]],[11,R[55],E,E,3,[[],[R[16]]]],[11,R[56],E,E,3,[[["self"]],[T]]],[11,R[60],E,E,3,[[["self"]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[61]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"from",R[62],E,4,[[[T]],[T]]],[11,R[58],E,E,4,[[["self"]],[T]]],[11,R[59],E,E,4,[[[T],["self"]]]],[11,"into",E,E,4,[[],[U]]],[11,R[63],E,E,4,[[["self"]],[R[17]]]],[11,R[54],E,E,4,[[[U]],[R[16]]]],[11,R[55],E,E,4,[[],[R[16]]]],[11,R[56],E,E,4,[[["self"]],[T]]],[11,R[60],E,E,4,[[["self"]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[61]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[58],E,E,5,[[["self"]],[T]]],[11,R[59],E,E,5,[[[T],["self"]]]],[11,"into",E,E,5,[[],[U]]],[11,R[54],E,E,5,[[[U]],[R[16]]]],[11,R[55],E,E,5,[[],[R[16]]]],[11,R[56],E,E,5,[[["self"]],[T]]],[11,R[60],E,E,5,[[["self"]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[61]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[58],E,E,6,[[["self"]],[T]]],[11,R[59],E,E,6,[[[T],["self"]]]],[11,"into",E,E,6,[[],[U]]],[11,R[54],E,E,6,[[[U]],[R[16]]]],[11,R[55],E,E,6,[[],[R[16]]]],[11,R[56],E,E,6,[[["self"]],[T]]],[11,R[60],E,E,6,[[["self"]],[T]]],[11,R[57],E,E,6,[[["self"]],[R[61]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[58],E,E,7,[[["self"]],[T]]],[11,R[59],E,E,7,[[[T],["self"]]]],[11,"into",E,E,7,[[],[U]]],[11,R[54],E,E,7,[[[U]],[R[16]]]],[11,R[55],E,E,7,[[],[R[16]]]],[11,R[56],E,E,7,[[["self"]],[T]]],[11,R[60],E,E,7,[[["self"]],[T]]],[11,R[57],E,E,7,[[["self"]],[R[61]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[58],E,E,8,[[["self"]],[T]]],[11,R[59],E,E,8,[[[T],["self"]]]],[11,"into",E,E,8,[[],[U]]],[11,R[54],E,E,8,[[[U]],[R[16]]]],[11,R[55],E,E,8,[[],[R[16]]]],[11,R[56],E,E,8,[[["self"]],[T]]],[11,R[60],E,E,8,[[["self"]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[61]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[63],E,E,31,[[["self"]],[R[17]]]],[11,R[54],E,E,31,[[[U]],[R[16]]]],[11,R[55],E,E,31,[[],[R[16]]]],[11,R[56],E,E,31,[[["self"]],[T]]],[11,R[60],E,E,31,[[["self"]],[T]]],[11,R[57],E,E,31,[[["self"]],[R[61]]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[58],E,E,9,[[["self"]],[T]]],[11,R[59],E,E,9,[[[T],["self"]]]],[11,"into",E,E,9,[[],[U]]],[11,R[63],E,E,9,[[["self"]],[R[17]]]],[11,R[54],E,E,9,[[[U]],[R[16]]]],[11,R[55],E,E,9,[[],[R[16]]]],[11,R[56],E,E,9,[[["self"]],[T]]],[11,R[60],E,E,9,[[["self"]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[61]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[63],E,E,32,[[["self"]],[R[17]]]],[11,R[54],E,E,32,[[[U]],[R[16]]]],[11,R[55],E,E,32,[[],[R[16]]]],[11,R[56],E,E,32,[[["self"]],[T]]],[11,R[60],E,E,32,[[["self"]],[T]]],[11,R[57],E,E,32,[[["self"]],[R[61]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"from",R[64],E,33,[[[T]],[T]]],[11,R[58],E,E,33,[[["self"]],[T]]],[11,R[59],E,E,33,[[[T],["self"]]]],[11,"into",E,E,33,[[],[U]]],[11,R[54],E,E,33,[[[U]],[R[16]]]],[11,R[55],E,E,33,[[],[R[16]]]],[11,R[56],E,E,33,[[["self"]],[T]]],[11,R[60],E,E,33,[[["self"]],[T]]],[11,R[57],E,E,33,[[["self"]],[R[61]]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[58],E,E,34,[[["self"]],[T]]],[11,R[59],E,E,34,[[[T],["self"]]]],[11,"into",E,E,34,[[],[U]]],[11,R[54],E,E,34,[[[U]],[R[16]]]],[11,R[55],E,E,34,[[],[R[16]]]],[11,R[56],E,E,34,[[["self"]],[T]]],[11,R[60],E,E,34,[[["self"]],[T]]],[11,R[57],E,E,34,[[["self"]],[R[61]]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"from",R[26],E,11,[[[T]],[T]]],[11,R[58],E,E,11,[[["self"]],[T]]],[11,R[59],E,E,11,[[[T],["self"]]]],[11,"into",E,E,11,[[],[U]]],[11,R[54],E,E,11,[[[U]],[R[16]]]],[11,R[55],E,E,11,[[],[R[16]]]],[11,R[56],E,E,11,[[["self"]],[T]]],[11,R[60],E,E,11,[[["self"]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[61]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[58],E,E,12,[[["self"]],[T]]],[11,R[59],E,E,12,[[[T],["self"]]]],[11,"into",E,E,12,[[],[U]]],[11,R[54],E,E,12,[[[U]],[R[16]]]],[11,R[55],E,E,12,[[],[R[16]]]],[11,R[56],E,E,12,[[["self"]],[T]]],[11,R[60],E,E,12,[[["self"]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[61]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[58],E,E,13,[[["self"]],[T]]],[11,R[59],E,E,13,[[[T],["self"]]]],[11,"into",E,E,13,[[],[U]]],[11,R[54],E,E,13,[[[U]],[R[16]]]],[11,R[55],E,E,13,[[],[R[16]]]],[11,R[56],E,E,13,[[["self"]],[T]]],[11,R[60],E,E,13,[[["self"]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[61]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[58],E,E,14,[[["self"]],[T]]],[11,R[59],E,E,14,[[[T],["self"]]]],[11,"into",E,E,14,[[],[U]]],[11,R[54],E,E,14,[[[U]],[R[16]]]],[11,R[55],E,E,14,[[],[R[16]]]],[11,R[56],E,E,14,[[["self"]],[T]]],[11,R[60],E,E,14,[[["self"]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[61]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[58],E,E,15,[[["self"]],[T]]],[11,R[59],E,E,15,[[[T],["self"]]]],[11,"into",E,E,15,[[],[U]]],[11,R[54],E,E,15,[[[U]],[R[16]]]],[11,R[55],E,E,15,[[],[R[16]]]],[11,R[56],E,E,15,[[["self"]],[T]]],[11,R[60],E,E,15,[[["self"]],[T]]],[11,R[57],E,E,15,[[["self"]],[R[61]]]],[11,R[65],E,E,15,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[58],E,E,16,[[["self"]],[T]]],[11,R[59],E,E,16,[[[T],["self"]]]],[11,"into",E,E,16,[[],[U]]],[11,R[54],E,E,16,[[[U]],[R[16]]]],[11,R[55],E,E,16,[[],[R[16]]]],[11,R[56],E,E,16,[[["self"]],[T]]],[11,R[60],E,E,16,[[["self"]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[61]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[58],E,E,17,[[["self"]],[T]]],[11,R[59],E,E,17,[[[T],["self"]]]],[11,"into",E,E,17,[[],[U]]],[11,R[54],E,E,17,[[[U]],[R[16]]]],[11,R[55],E,E,17,[[],[R[16]]]],[11,R[56],E,E,17,[[["self"]],[T]]],[11,R[60],E,E,17,[[["self"]],[T]]],[11,R[57],E,E,17,[[["self"]],[R[61]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[58],E,E,18,[[["self"]],[T]]],[11,R[59],E,E,18,[[[T],["self"]]]],[11,"into",E,E,18,[[],[U]]],[11,R[54],E,E,18,[[[U]],[R[16]]]],[11,R[55],E,E,18,[[],[R[16]]]],[11,R[56],E,E,18,[[["self"]],[T]]],[11,R[60],E,E,18,[[["self"]],[T]]],[11,R[57],E,E,18,[[["self"]],[R[61]]]],[11,R[65],E,E,18,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[58],E,E,19,[[["self"]],[T]]],[11,R[59],E,E,19,[[[T],["self"]]]],[11,"into",E,E,19,[[],[U]]],[11,R[54],E,E,19,[[[U]],[R[16]]]],[11,R[55],E,E,19,[[],[R[16]]]],[11,R[56],E,E,19,[[["self"]],[T]]],[11,R[60],E,E,19,[[["self"]],[T]]],[11,R[57],E,E,19,[[["self"]],[R[61]]]],[11,R[65],E,E,19,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[58],E,E,20,[[["self"]],[T]]],[11,R[59],E,E,20,[[[T],["self"]]]],[11,"into",E,E,20,[[],[U]]],[11,R[54],E,E,20,[[[U]],[R[16]]]],[11,R[55],E,E,20,[[],[R[16]]]],[11,R[56],E,E,20,[[["self"]],[T]]],[11,R[60],E,E,20,[[["self"]],[T]]],[11,R[57],E,E,20,[[["self"]],[R[61]]]],[11,R[65],E,E,20,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[58],E,E,21,[[["self"]],[T]]],[11,R[59],E,E,21,[[[T],["self"]]]],[11,"into",E,E,21,[[],[U]]],[11,R[54],E,E,21,[[[U]],[R[16]]]],[11,R[55],E,E,21,[[],[R[16]]]],[11,R[56],E,E,21,[[["self"]],[T]]],[11,R[60],E,E,21,[[["self"]],[T]]],[11,R[57],E,E,21,[[["self"]],[R[61]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[58],E,E,22,[[["self"]],[T]]],[11,R[59],E,E,22,[[[T],["self"]]]],[11,"into",E,E,22,[[],[U]]],[11,R[54],E,E,22,[[[U]],[R[16]]]],[11,R[55],E,E,22,[[],[R[16]]]],[11,R[56],E,E,22,[[["self"]],[T]]],[11,R[60],E,E,22,[[["self"]],[T]]],[11,R[57],E,E,22,[[["self"]],[R[61]]]],[11,R[65],E,E,22,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[58],E,E,23,[[["self"]],[T]]],[11,R[59],E,E,23,[[[T],["self"]]]],[11,"into",E,E,23,[[],[U]]],[11,R[63],E,E,23,[[["self"]],[R[17]]]],[11,R[54],E,E,23,[[[U]],[R[16]]]],[11,R[55],E,E,23,[[],[R[16]]]],[11,R[56],E,E,23,[[["self"]],[T]]],[11,R[60],E,E,23,[[["self"]],[T]]],[11,R[57],E,E,23,[[["self"]],[R[61]]]],[11,R[65],E,E,23,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[58],E,E,24,[[["self"]],[T]]],[11,R[59],E,E,24,[[[T],["self"]]]],[11,"into",E,E,24,[[],[U]]],[11,R[54],E,E,24,[[[U]],[R[16]]]],[11,R[55],E,E,24,[[],[R[16]]]],[11,R[56],E,E,24,[[["self"]],[T]]],[11,R[60],E,E,24,[[["self"]],[T]]],[11,R[57],E,E,24,[[["self"]],[R[61]]]],[11,R[65],E,E,24,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"state",R[15],E,30,[[["self"]],[R[41]]]],[11,"name",R[26],E,13,[[["self"]],[[R[27],["str"]],["str"]]]],[11,R[66],E,E,13,[[["self"],["str"]]]],[11,R[67],E,E,13,[[["self"],["bool"]]]],[11,R[68],E,E,13,[[["self"]],["bool"]]],[11,R[10],E,E,13,[[["self"]],[[R[27],["str"]],["str"]]]],[11,R[20],E,E,13,[[["self"]],[[R[27],["str"]],["str"]]]],[11,R[21],E,E,13,[[["self"]],[[R[28]],[R[27],[R[28]]]]]],[11,R[33],E,E,13,[[["self"]],[[R[27],[R[29]]],[R[29]]]]],[11,"items",E,E,13,[[["self"]],[[R[30]],[R[27],[R[30]]]]]],[11,R[69],E,E,13,[[["self"]],[[R[27],[R[30]]],[R[30]]]]],[11,R[70],E,E,13,[[["self"]],[[R[30]],[R[27],[R[30]]]]]],[11,R[71],E,E,13,[[["self"]],[[R[27],[R[30]]],[R[30]]]]],[11,R[22],E,E,13,[[["self"]],[[R[27],[R[31]]],[R[31]]]]],[11,R[72],E,E,13,[[["self"]],[[R[31]],[R[27],[R[31]]]]]],[11,R[73],E,E,13,[[["self"]],[[R[27],[R[32]]],[R[32]]]]],[11,"from",R[53],E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",E,E,0,[[["error"]],["self"]]],[11,"from",R[15],E,30,[[[R[41]]],["self"]]],[11,"from",R[64],E,33,[[["s"]],["self"]]],[11,"from",E,E,34,[[["s"]],["self"]]],[11,"from",R[26],E,23,[[["method"]],[R[76]]]],[11,"from",E,E,21,[[["s"]],["self"]]],[11,"clone",R[62],E,4,[[["self"]],[R[79]]]],[11,"clone",E,E,5,[[["self"]],["pathops"]]],[11,"clone",E,E,6,[[["self"]],["oprequirement"]]],[11,"clone",E,E,7,[[["self"]],[R[75]]]],[11,"clone",E,E,8,[[["self"]],["objectfield"]]],[11,"clone",E,E,9,[[["self"]],[R[81]]]],[11,"clone",R[14],E,1,[[["self"]],[R[41]]]],[11,"clone",R[15],E,2,[[["self"]],[R[74]]]],[11,"clone",R[64],E,33,[[["self"]],["self"]]],[11,"clone",E,E,34,[[["self"]],["self"]]],[11,"clone",R[26],E,18,[[["self"]],[R[84]]]],[11,"clone",E,E,19,[[["self"]],[R[28]]]],[11,"clone",E,E,20,[[["self"]],[R[29]]]],[11,"clone",E,E,11,[[["self"]],[R[82]]]],[11,"clone",E,E,12,[[["self"]],[R[34]]]],[11,"clone",E,E,13,[[["self"]],["defaultschema"]]],[11,"clone",E,E,14,[[["self"]],[R[83]]]],[11,"clone",E,E,15,[[["self"]],[R[75]]]],[11,"clone",E,E,22,[[["self"]],[R[77]]]],[11,"clone",E,E,16,[[["self"]],[R[35]]]],[11,"clone",E,E,17,[[["self"]],[R[141]]]],[11,"clone",E,E,23,[[["self"]],[R[76]]]],[11,"clone",E,E,24,[[["self"]],[R[85]]]],[11,"clone",E,E,21,[[["self"]],["self"]]],[11,"cmp",E,E,22,[[["self"],[R[77]]],[R[78]]]],[11,"cmp",E,E,23,[[["self"],[R[76]]],[R[78]]]],[11,R[80],R[62],E,4,[[],[R[79]]]],[11,R[80],E,E,5,[[],["pathops"]]],[11,R[80],E,E,9,[[],[R[81]]]],[11,R[80],R[14],E,1,[[],[R[41]]]],[11,R[80],R[15],E,2,[[],[R[74]]]],[11,R[80],R[26],E,11,[[],[R[82]]]],[11,R[80],E,E,13,[[],["self"]]],[11,R[80],E,E,12,[[],["self"]]],[11,R[80],E,E,14,[[],[R[83]]]],[11,R[80],E,E,16,[[],[R[35]]]],[11,R[80],E,E,18,[[],["self"]]],[11,"eq",E,E,18,[[["self"],[R[84]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[28]]],["bool"]]],[11,"eq",E,E,20,[[[R[29]],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[75]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[75]],["self"]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[77]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[76]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[85]]],["bool"]]],[11,R[86],E,E,22,[[["self"],[R[77]]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,23,[[["self"],[R[76]]],[[R[78]],[R[27],[R[78]]]]]],[11,"fmt",R[53],E,0,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[62],E,31,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,9,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,32,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,4,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[26],E,23,[[["self"],[R[87]]],[R[16]]]],[11,R[88],R[64],E,33,[[["self"]]]],[11,R[88],E,E,34,[[["self"]]]],[11,R[88],R[26],E,21,[[["self"]]]],[11,"deref",R[64],E,33,[[["self"]]]],[11,"deref",E,E,34,[[["self"]]]],[11,"deref",R[26],E,21,[[["self"]]]],[11,"fmt",R[53],E,0,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[62],E,4,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,5,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,6,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,7,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,8,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,9,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[14],E,1,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[15],E,2,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[64],E,33,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,34,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",R[26],E,18,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,19,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,20,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,11,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,12,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,13,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,21,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,14,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,15,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,22,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,16,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,17,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,23,[[["self"],[R[87]]],[R[16]]]],[11,"fmt",E,E,24,[[["self"],[R[87]]],[R[16]]]],[11,"name",R[53],E,0,[[["self"]],[[R[27],["str"]],["str"]]]],[11,"cause",E,E,0,[[["self"]],[["fail"],[R[27],["fail"]]]]],[11,R[89],E,E,0,[[["self"]],[[R[89]],[R[27],[R[89]]]]]],[11,R[90],R[64],E,33,[[["self"],["s"]],[R[16]]]],[11,R[90],E,E,34,[[["self"],["s"]],[R[16]]]],[11,R[90],R[26],E,21,[[["self"],["s"]],[R[16]]]],[11,R[90],E,E,18,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,19,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,20,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,11,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,12,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,13,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,14,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,15,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,22,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,16,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,17,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,23,[[["self"],["__s"]],[R[16]]]],[11,R[90],E,E,24,[[["self"],["__s"]],[R[16]]]],[11,R[91],R[64],E,33,[[["d"]],[R[16]]]],[11,R[91],E,E,34,[[["d"]],[R[16]]]],[11,R[91],R[26],E,18,[[["__d"]],[R[16]]]],[11,R[91],E,E,19,[[["__d"]],[R[16]]]],[11,R[91],E,E,20,[[["__d"]],[R[16]]]],[11,R[91],E,E,11,[[["__d"]],[R[16]]]],[11,R[91],E,E,12,[[["__d"]],[R[16]]]],[11,R[91],E,E,13,[[["__d"]],[R[16]]]],[11,R[91],E,E,21,[[["__d"]],[R[16]]]],[11,R[91],E,E,14,[[["__d"]],[R[16]]]],[11,R[91],E,E,15,[[["__d"]],[R[16]]]],[11,R[91],E,E,22,[[["__d"]],[R[16]]]],[11,R[91],E,E,16,[[["__d"]],[R[16]]]],[11,R[91],E,E,17,[[["__d"]],[R[16]]]],[11,R[91],E,E,23,[[["__d"]],[R[16]]]],[11,R[91],E,E,24,[[["__d"]],[R[16]]]],[11,R[42],R[15],R[43],10,[[["self"],["api"]],[["error"],[R[16],["error"]]]]],[11,R[44],E,R[45],10,[[["self"]],[[R[16],["box","error"]],["error"],["box",[R[12]]]]]],[11,R[46],E,R[47],10,[[["self"]],[[R[17]],["error"],[R[16],[R[17],"error"]]]]],[11,R[48],E,R[49],10,[[["self"]],[[R[50]],["error"],[R[16],[R[50],"error"]]]]],[11,R[51],E,R[52],10,[[["self"],["bool"]],[["error"],[R[16],[R[18],"error"]],[R[18]]]]]],"p":[[4,R[92]],[3,R[2]],[3,R[93]],[4,R[94]],[3,R[95]],[3,"PathOps"],[3,R[96]],[3,R[24]],[3,R[97]],[3,R[98]],[8,R[99]],[3,R[100]],[3,R[101]],[3,R[102]],[3,R[103]],[3,R[24]],[3,R[104]],[3,"Response"],[4,"Version"],[4,"DataType"],[4,R[105]],[4,R[106]],[4,R[107]],[4,R[108]],[4,R[109]],[8,"Schema"],[8,R[110]],[8,R[111]],[8,R[112]],[6,"Api"],[3,R[113]],[3,R[114]],[3,R[115]],[3,R[116]],[3,R[117]]]};
searchIndex["paperclip_actix"]={"doc":E,"i":[[3,R[177],R[124],R[118],N,N],[3,"Route",E,R[120],N,N],[3,"Scope",E,R[119],N,N],[3,"App",E,"Wrapper for `actix_web::App`.",N,N],[0,"web",E,"Proxy module for `actix_web::web`.",N,N],[5,"block",R[127],"Execute blocking function on a thread pool, returns future…",N,[[["f"]]]],[5,"service",E,"Create raw service for a specific path.",N,[[["str"]],["webservice"]]],[5,"to",E,"Create a new route and add handler.",N,[[["f"]],["route"]]],[5,R[123],E,"Create a new route and add async handler.",N,[[["f"]],["route"]]],[3,"Bytes",E,"A reference counted contiguous slice of memory.",N,N],[3,"BytesMut",E,"A unique reference to a contiguous slice of memory.",N,N],[3,"Data",E,"Application data.",N,N],[3,"Form",E,"Extract typed information from the request's body.",N,N],[12,"0",E,E,0,N],[3,R[181],E,"Form extractor configuration",N,N],[3,R[182],E,"An HTTP Request",N,N],[3,R[183],E,"An HTTP Response",N,N],[3,"Json",E,"Json helper",N,N],[12,"0",E,E,1,N],[3,R[184],E,"Json extractor configuration",N,N],[3,"Path",E,"Extract typed information from the request's path.",N,N],[3,R[185],E,"Path extractor configuration",N,N],[3,"Payload",E,"Payload extractor returns request 's payload stream.",N,N],[3,R[186],E,"Payload configuration for request's payload.",N,N],[3,"Query",E,"Extract typed information from the request's query.",N,N],[3,R[187],E,"Query extractor configuration",N,N],[3,R[177],E,R[118],N,N],[3,"Scope",E,R[119],N,N],[3,"Route",E,R[120],N,N],[3,R[178],E,"Wrapper for `actix_web::web::ServiceConfig`.",N,N],[5,R[121],E,"Wrapper for `actix_web::web::resource`.",N,[[["str"]],[R[121]]]],[5,"scope",E,"Wrapper for `actix_web::web::scope`.",N,[[["str"]],["scope"]]],[5,"method",E,"Wrapper for `actix_web::web::method`.",N,[[["method"]],["route"]]],[5,"get",E,"Wrapper for `actix_web::web::get`.",N,[[],["route"]]],[5,"put",E,"Wrapper for `actix_web::web::put`.",N,[[],["route"]]],[5,"post",E,"Wrapper for `actix_web::web::post`.",N,[[],["route"]]],[5,"patch",E,"Wrapper for `actix_web::web::patch`.",N,[[],["route"]]],[5,"delete",E,"Wrapper for `actix_web::web::delete`.",N,[[],["route"]]],[5,"options",E,"Wrapper for `actix_web::web::options`.",N,[[],["route"]]],[5,"head",E,"Wrapper for `actix_web::web::head`.",N,[[],["route"]]],[11,"new",E,"Wrapper for `actix_web::Resource::new`.",2,[[["str"]],[R[121]]]],[11,"name",E,"Proxy for `actix_web::Resource::name`.",2,[[["str"]],["self"]]],[11,"guard",E,"Proxy for `actix_web::Resource::guard`.",2,[[["guard"]],["self"]]],[11,"route",E,"Wrapper for `actix_web::Resource::route`.",2,[[["route"]],["self"]]],[11,"data",E,"Proxy for `actix_web::Resource::data`.",2,[[[U]],["self"]]],[11,"to",E,"Wrapper for `actix_web::Resource::to`.",2,[[["f"]],["self"]]],[11,R[123],E,"Wrapper for `actix_web::Resource::to_async`.",2,[[["f"]],["self"]]],[11,"wrap",E,"Proxy for `actix_web::web::Resource::wrap`.",2,[[["f"]],[[R[121],[R[121]]],[R[121]]]]],[11,"wrap_fn",E,"Proxy for `actix_web::web::Resource::wrap_fn`.",2,[[["f"]],[[R[121],[R[121]]],[R[121]]]]],[11,R[122],E,"Proxy for `actix_web::web::Resource::default_service`.",2,[[["f"]],["self"]]],[11,"new",E,"Wrapper for `actix_web::Scope::new`",3,[[["str"]],["self"]]],[11,"guard",E,"Proxy for `actix_web::Scope::guard`.",3,[[["guard"]],["self"]]],[11,"data",E,"Proxy for `actix_web::Scope::data`.",3,[[[U]],["self"]]],[11,R[125],E,"Wrapper for `actix_web::Scope::configure`.",3,[[["f"]],["self"]]],[11,"service",E,"Wrapper for `actix_web::Scope::service`.",3,[[["f"]],["self"]]],[11,"route",E,"Wrapper for `actix_web::Scope::route`.",3,[[["route"],["str"]],["self"]]],[11,R[122],E,"Proxy for `actix_web::web::Scope::default_service`.",3,[[["f"]],["self"]]],[11,"wrap",E,"Proxy for `actix_web::web::Scope::wrap`.",3,[[["f"]],[["scope"],["scope",["scope"]]]]],[11,"wrap_fn",E,"Proxy for `actix_web::web::Scope::wrap_fn`.",3,[[["f"]],[["scope"],["scope",["scope"]]]]],[11,"new",E,"Wrapper for `actix_web::Route::new`",4,[[],["route"]]],[11,"method",E,"Wrapper for `actix_web::Route::method`",4,[[["method"]],["self"]]],[11,"guard",E,"Proxy for `actix_web::Route::guard`.",4,[[["guard"]],["self"]]],[11,"to",E,"Wrapper for `actix_web::Route::to`",4,[[["f"]],["self"]]],[11,R[123],E,"Wrapper for `actix_web::Route::to_async`",4,[[["f"]],["self"]]],[11,"route",E,"Wrapper for `actix_web::web::ServiceConfig::route`.",5,[[["self"],["route"],["str"]],["self"]]],[11,"service",E,"Wrapper for `actix_web::web::ServiceConfig::service`.",5,[[["self"],["f"]],["self"]]],[11,R[126],E,"Proxy for…",5,[[["self"],[U],["n"]],["self"]]],[8,R[179],R[124],"Extension trait for actix-web applications.",N,N],[16,"Wrapper",E,E,6,N],[10,"wrap_api",E,"Consumes this app and produces its wrapper to start…",6,[[]]],[8,R[180],E,"Indicates that this thingmabob has a path and a bunch of…",N,N],[10,"path",E,"Where this thing gets mounted.",7,[[["self"]],["str"]]],[10,R[147],E,"Map of HTTP methods and the associated API operations.",7,[[["self"]],[[R[76]],[R[35],[R[34]]],[R[31],[R[76],R[35]]]]]],[10,R[36],E,"The definitions recorded by this object.",7,[[["self"]],[[R[31],[R[17],R[34]]],[R[17]],[R[34]]]]],[11,R[148],E,"Updates the given map of operations with operations…",7,[[["self"],[R[31]]]]],[11,"data",E,"Proxy for `actix_web::App::data`.",8,[[[U]],["self"]]],[11,"data_factory",E,"Proxy for `actix_web::App::data_factory`.",8,[[["f"]],["self"]]],[11,"register_data",E,"Proxy for `actix_web::App::register_data`.",8,[[["data"]],["self"]]],[11,R[125],E,"Wrapper for `actix_web::App::configure`.",8,[[["f"]],["self"]]],[11,"route",E,"Wrapper for `actix_web::App::route`.",8,[[["route"],["str"]],["self"]]],[11,"service",E,"Wrapper for `actix_web::App::service`.",8,[[["f"]],["self"]]],[11,"hostname",E,"Proxy for `actix_web::App::hostname`.",8,[[["str"]],["self"]]],[11,R[122],E,"Proxy for `actix_web::App::default_service`.",8,[[["f"]],["self"]]],[11,R[126],E,"Proxy for `actix_web::App::external_resource`.",8,[[[U],["n"]],["self"]]],[11,"wrap",E,"Proxy for `actix_web::web::App::wrap`.",8,[[["f"]],["app"]]],[11,"wrap_fn",E,"Proxy for `actix_web::web::App::wrap_fn`.",8,[[["f"]],["app"]]],[11,"with_json_spec_at",E,"Mounts the specification for all operations and…",8,[[["str"]],["self"]]],[11,"build",E,"Builds and returns the `actix_web::App`.",8,[[],["app"]]],[11,"from",R[127],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[54],E,E,2,[[[U]],[R[16]]]],[11,R[55],E,E,2,[[],[R[16]]]],[11,R[56],E,E,2,[[["self"]],[T]]],[11,R[60],E,E,2,[[["self"]],[T]]],[11,R[57],E,E,2,[[["self"]],[R[61]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[54],E,E,4,[[[U]],[R[16]]]],[11,R[55],E,E,4,[[],[R[16]]]],[11,R[56],E,E,4,[[["self"]],[T]]],[11,R[60],E,E,4,[[["self"]],[T]]],[11,R[57],E,E,4,[[["self"]],[R[61]]]],[11,R[150],E,E,4,[[],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[54],E,E,3,[[[U]],[R[16]]]],[11,R[55],E,E,3,[[],[R[16]]]],[11,R[56],E,E,3,[[["self"]],[T]]],[11,R[60],E,E,3,[[["self"]],[T]]],[11,R[57],E,E,3,[[["self"]],[R[61]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"from",R[124],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[54],E,E,8,[[[U]],[R[16]]]],[11,R[55],E,E,8,[[],[R[16]]]],[11,R[56],E,E,8,[[["self"]],[T]]],[11,R[60],E,E,8,[[["self"]],[T]]],[11,R[57],E,E,8,[[["self"]],[R[61]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"from",R[127],E,9,[[[T]],[T]]],[11,R[128],E,E,9,[[],["i"]]],[11,R[58],E,E,9,[[["self"]],[T]]],[11,R[59],E,E,9,[[[T],["self"]]]],[11,"into",E,E,9,[[],[U]]],[11,R[54],E,E,9,[[[U]],[R[16]]]],[11,R[55],E,E,9,[[],[R[16]]]],[11,R[56],E,E,9,[[["self"]],[T]]],[11,R[60],E,E,9,[[["self"]],[T]]],[11,R[57],E,E,9,[[["self"]],[R[61]]]],[11,R[146],E,E,9,[[],[T]]],[11,R[65],E,E,9,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[128],E,E,10,[[],["i"]]],[11,R[58],E,E,10,[[["self"]],[T]]],[11,R[59],E,E,10,[[[T],["self"]]]],[11,"into",E,E,10,[[],[U]]],[11,R[54],E,E,10,[[[U]],[R[16]]]],[11,R[55],E,E,10,[[],[R[16]]]],[11,R[56],E,E,10,[[["self"]],[T]]],[11,R[60],E,E,10,[[["self"]],[T]]],[11,R[57],E,E,10,[[["self"]],[R[61]]]],[11,R[146],E,E,10,[[],[T]]],[11,R[65],E,E,10,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[58],E,E,11,[[["self"]],[T]]],[11,R[59],E,E,11,[[[T],["self"]]]],[11,"into",E,E,11,[[],[U]]],[11,R[54],E,E,11,[[[U]],[R[16]]]],[11,R[55],E,E,11,[[],[R[16]]]],[11,R[56],E,E,11,[[["self"]],[T]]],[11,R[60],E,E,11,[[["self"]],[T]]],[11,R[57],E,E,11,[[["self"]],[R[61]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[63],E,E,0,[[["self"]],[R[17]]]],[11,R[54],E,E,0,[[[U]],[R[16]]]],[11,R[55],E,E,0,[[],[R[16]]]],[11,R[56],E,E,0,[[["self"]],[T]]],[11,R[60],E,E,0,[[["self"]],[T]]],[11,R[57],E,E,0,[[["self"]],[R[61]]]],[11,R[65],E,E,0,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[58],E,E,12,[[["self"]],[T]]],[11,R[59],E,E,12,[[[T],["self"]]]],[11,"into",E,E,12,[[],[U]]],[11,R[54],E,E,12,[[[U]],[R[16]]]],[11,R[55],E,E,12,[[],[R[16]]]],[11,R[56],E,E,12,[[["self"]],[T]]],[11,R[60],E,E,12,[[["self"]],[T]]],[11,R[57],E,E,12,[[["self"]],[R[61]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[58],E,E,13,[[["self"]],[T]]],[11,R[59],E,E,13,[[[T],["self"]]]],[11,"into",E,E,13,[[],[U]]],[11,R[54],E,E,13,[[[U]],[R[16]]]],[11,R[55],E,E,13,[[],[R[16]]]],[11,R[56],E,E,13,[[["self"]],[T]]],[11,R[60],E,E,13,[[["self"]],[T]]],[11,R[57],E,E,13,[[["self"]],[R[61]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[54],E,E,14,[[[U]],[R[16]]]],[11,R[55],E,E,14,[[],[R[16]]]],[11,R[56],E,E,14,[[["self"]],[T]]],[11,R[60],E,E,14,[[["self"]],[T]]],[11,R[57],E,E,14,[[["self"]],[R[61]]]],[11,R[140],E,E,14,[[],["f"]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[63],E,E,1,[[["self"]],[R[17]]]],[11,R[54],E,E,1,[[[U]],[R[16]]]],[11,R[55],E,E,1,[[],[R[16]]]],[11,R[56],E,E,1,[[["self"]],[T]]],[11,R[60],E,E,1,[[["self"]],[T]]],[11,R[57],E,E,1,[[["self"]],[R[61]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[58],E,E,15,[[["self"]],[T]]],[11,R[59],E,E,15,[[[T],["self"]]]],[11,"into",E,E,15,[[],[U]]],[11,R[54],E,E,15,[[[U]],[R[16]]]],[11,R[55],E,E,15,[[],[R[16]]]],[11,R[56],E,E,15,[[["self"]],[T]]],[11,R[60],E,E,15,[[["self"]],[T]]],[11,R[57],E,E,15,[[["self"]],[R[61]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[63],E,E,16,[[["self"]],[R[17]]]],[11,R[54],E,E,16,[[[U]],[R[16]]]],[11,R[55],E,E,16,[[],[R[16]]]],[11,R[56],E,E,16,[[["self"]],[T]]],[11,R[60],E,E,16,[[["self"]],[T]]],[11,R[57],E,E,16,[[["self"]],[R[61]]]],[11,R[65],E,E,16,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[58],E,E,17,[[["self"]],[T]]],[11,R[59],E,E,17,[[[T],["self"]]]],[11,"into",E,E,17,[[],[U]]],[11,R[54],E,E,17,[[[U]],[R[16]]]],[11,R[55],E,E,17,[[],[R[16]]]],[11,R[56],E,E,17,[[["self"]],[T]]],[11,R[60],E,E,17,[[["self"]],[T]]],[11,R[57],E,E,17,[[["self"]],[R[61]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[54],E,E,18,[[[U]],[R[16]]]],[11,R[55],E,E,18,[[],[R[16]]]],[11,R[56],E,E,18,[[["self"]],[T]]],[11,R[60],E,E,18,[[["self"]],[T]]],[11,R[57],E,E,18,[[["self"]],[R[61]]]],[11,"into_stream",E,E,18,[[]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[58],E,E,19,[[["self"]],[T]]],[11,R[59],E,E,19,[[[T],["self"]]]],[11,"into",E,E,19,[[],[U]]],[11,R[54],E,E,19,[[[U]],[R[16]]]],[11,R[55],E,E,19,[[],[R[16]]]],[11,R[56],E,E,19,[[["self"]],[T]]],[11,R[60],E,E,19,[[["self"]],[T]]],[11,R[57],E,E,19,[[["self"]],[R[61]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[63],E,E,20,[[["self"]],[R[17]]]],[11,R[54],E,E,20,[[[U]],[R[16]]]],[11,R[55],E,E,20,[[],[R[16]]]],[11,R[56],E,E,20,[[["self"]],[T]]],[11,R[60],E,E,20,[[["self"]],[T]]],[11,R[57],E,E,20,[[["self"]],[R[61]]]],[11,R[65],E,E,20,[[["self"],["k"]],["bool"]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[58],E,E,21,[[["self"]],[T]]],[11,R[59],E,E,21,[[[T],["self"]]]],[11,"into",E,E,21,[[],[U]]],[11,R[54],E,E,21,[[[U]],[R[16]]]],[11,R[55],E,E,21,[[],[R[16]]]],[11,R[56],E,E,21,[[["self"]],[T]]],[11,R[60],E,E,21,[[["self"]],[T]]],[11,R[57],E,E,21,[[["self"]],[R[61]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[54],E,E,5,[[[U]],[R[16]]]],[11,R[55],E,E,5,[[],[R[16]]]],[11,R[56],E,E,5,[[["self"]],[T]]],[11,R[60],E,E,5,[[["self"]],[T]]],[11,R[57],E,E,5,[[["self"]],[R[61]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"from",E,E,16,[[[T]],["path"]]],[11,R[86],E,E,16,[[["path"],["self"]],[[R[78]],[R[27],[R[78]]]]]],[11,"lt",E,E,16,[[["path"],["self"]],["bool"]]],[11,"le",E,E,16,[[["path"],["self"]],["bool"]]],[11,"gt",E,E,16,[[["path"],["self"]],["bool"]]],[11,"ge",E,E,16,[[["path"],["self"]],["bool"]]],[11,R[86],E,E,20,[[["self"],["query"]],[[R[78]],[R[27],[R[78]]]]]],[11,"lt",E,E,20,[[["self"],["query"]],["bool"]]],[11,"le",E,E,20,[[["self"],["query"]],["bool"]]],[11,"gt",E,E,20,[[["self"],["query"]],["bool"]]],[11,"ge",E,E,20,[[["self"],["query"]],["bool"]]],[11,R[86],E,E,0,[[["self"],["form"]],[[R[78]],[R[27],[R[78]]]]]],[11,"lt",E,E,0,[[["self"],["form"]],["bool"]]],[11,"le",E,E,0,[[["self"],["form"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["form"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["form"]],["bool"]]],[11,"fmt",E,E,11,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,13,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,R[88],E,E,16,[[["self"]],[T]]],[11,R[88],E,E,1,[[["self"]],[T]]],[11,R[88],E,E,0,[[["self"]],[T]]],[11,R[88],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,12,[[],[R[133]]]],[11,R[80],E,E,17,[[],[R[130]]]],[11,R[80],E,E,21,[[],[R[131]]]],[11,R[80],E,E,19,[[],[R[132]]]],[11,R[80],E,E,15,[[],[R[129]]]],[11,"clone",E,E,15,[[["self"]],[R[129]]]],[11,"clone",E,E,11,[[["self"]],["data"]]],[11,"clone",E,E,17,[[["self"]],[R[130]]]],[11,"clone",E,E,21,[[["self"]],[R[131]]]],[11,"clone",E,E,13,[[["self"]],[R[136]]]],[11,"clone",E,E,19,[[["self"]],[R[132]]]],[11,"clone",E,E,12,[[["self"]],[R[133]]]],[11,"deref",E,E,20,[[["self"]],[T]]],[11,"deref",E,E,16,[[["self"]],[T]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"deref",E,E,11,[[["self"]],[T]]],[11,"deref",E,E,0,[[["self"]],[T]]],[11,"eq",E,E,20,[[["self"],["query"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["query"]],["bool"]]],[11,"eq",E,E,0,[[["self"],["form"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["form"]],["bool"]]],[11,"eq",E,E,16,[[["path"],["self"]],["bool"]]],[11,"ne",E,E,16,[[["path"],["self"]],["bool"]]],[11,"as_ref",E,E,16,[[["self"]],[T]]],[11,"poll",E,E,18,[[["self"]],[[R[16],["async",R[134]]],["async",[R[27]]],[R[134]]]]],[11,"headers",E,"Returns Request's headers.",13,[[["self"]],[R[159]]]],[11,R[135],E,R[160],13,[[["self"]],[["ref",[R[135]]],[R[135]]]]],[11,R[161],E,R[162],13,[[["self"]],[["refmut",[R[135]]],[R[135]]]]],[11,"take_payload",E,E,13,[[["self"]],[R[139]]]],[11,R[137],E,E,9,[[[R[136]]]]],[11,R[137],E,E,14,[[[R[136]]]]],[11,R[137],E,E,10,[[[R[136]]]]],[11,R[137],E,E,1,[[[R[136]]]]],[11,"fmt",E,E,20,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,16,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,R[138],E,E,0,[[[R[139]],[R[136]]]]],[11,R[138],E,E,9,[[[R[139]],[R[136]]]]],[11,R[138],E,E,20,[[[R[139]],[R[136]]]]],[11,R[138],E,E,1,[[[R[139]],[R[136]]]]],[11,R[138],E,E,18,[[[R[139]],[R[136]]]]],[11,R[138],E,E,13,[[[R[139]],[R[136]]]]],[11,R[138],E,E,16,[[[R[139]],[R[136]]]]],[11,R[138],E,E,11,[[[R[139]],[R[136]]]]],[11,"drop",E,E,13,[[["self"]]]],[11,"encoding",E,E,14,[[["self"],["contentencoding"]],[R[141]]]],[11,"cmp",E,E,20,[[["self"],["query"]],[R[78]]]],[11,"cmp",E,E,0,[[["self"],["form"]],[R[78]]]],[11,"cmp",E,E,16,[[["path"],["self"]],[R[78]]]],[11,R[140],E,E,14,[[]]],[11,"from",E,E,14,[[[R[17]]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[["error"]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[[R[144]]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[[R[16]]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[["str"]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[[R[168]]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[[R[17]]],[["body"],[R[141],["body"]]]]],[11,"from",E,E,14,[[["bytes"]],[["body"],[R[141],["body"]]]]],[11,"fmt",E,E,14,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"size",E,E,10,[[["self"]],["bodysize"]]],[11,R[142],E,E,10,[[["self"]],[[R[16],["async","error"]],["async",[R[27]]],["error"]]]],[11,"size",E,E,9,[[["self"]],["bodysize"]]],[11,R[142],E,E,9,[[["self"]],[[R[16],["async","error"]],["async",[R[27]]],["error"]]]],[11,R[55],E,E,9,[[],[[R[143]],[R[16],[R[143]]]]]],[11,R[60],E,E,9,[[["self"]]]],[11,R[60],E,E,10,[[["self"]]]],[11,"from",E,E,9,[[[R[17]]],["bytes"]]],[11,"from",E,E,9,[[[R[144]]],["bytes"]]],[11,"from",E,E,10,[[["bytes"]],[R[144]]]],[11,"from",E,E,10,[[[R[17]]],[R[144]]]],[11,"from",E,E,10,[[["vec",["u8"]],["u8"]],[R[144]]]],[11,"from",E,E,10,[[],[R[144]]]],[11,"from",E,E,9,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from",E,E,9,[[["str"]],["bytes"]]],[11,"from",E,E,9,[[],["bytes"]]],[11,"from",E,E,10,[[["str"]],[R[144]]]],[11,R[88],E,E,10,[[["self"]]]],[11,"fmt",E,E,9,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[87]]],[[R[16],["error"]],["error"]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,9,[[["self"],["h"]]]],[11,R[86],E,E,10,[[[R[17]],["self"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,9,[[["self"],[T]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,10,[[["self"],["str"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,9,[[[R[17]],["self"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,10,[[["self"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,9,[[["self"],["vec"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,10,[[["self"],["vec"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,10,[[["self"],[T]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,9,[[["self"],["bytes"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,10,[[["self"],[R[144]]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,9,[[["self"]],[[R[78]],[R[27],[R[78]]]]]],[11,R[86],E,E,9,[[["self"],["str"]],[[R[78]],[R[27],[R[78]]]]]],[11,"remaining_mut",E,E,10,[[["self"]],["usize"]]],[11,"advance_mut",E,E,10,[[["self"],["usize"]]]],[11,"bytes_mut",E,E,10,[[["self"]]]],[11,"put_slice",E,E,10,[[["self"]]]],[11,"put_u8",E,E,10,[[["self"],["u8"]]]],[11,"put_i8",E,E,10,[[["self"],["i8"]]]],[11,"write_str",E,E,10,[[["self"],["str"]],[[R[16],["error"]],["error"]]]],[11,"write_fmt",E,E,10,[[["self"],["arguments"]],[[R[16],["error"]],["error"]]]],[11,R[80],E,E,9,[[],["bytes"]]],[11,R[80],E,E,10,[[],[R[144]]]],[11,R[128],E,E,10,[[]]],[11,R[128],E,E,9,[[]]],[11,R[56],E,E,10,[[["self"]]]],[11,"clone",E,E,9,[[["self"]],["bytes"]]],[11,"clone",E,E,10,[[["self"]],[R[144]]]],[11,"extend",E,E,10,[[["self"],[T]]]],[11,"extend",E,E,9,[[["self"],[T]]]],[11,"extend",E,E,10,[[["self"],[T]]]],[11,"extend",E,E,9,[[["self"],[T]]]],[11,"deref",E,E,9,[[["self"]]]],[11,"deref",E,E,10,[[["self"]]]],[11,"eq",E,E,9,[[["self"],[T]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[144]]],["bool"]]],[11,"eq",E,E,10,[[["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["bytes"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,9,[[[R[17]],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[17]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,9,[[["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["vec"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[T]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[144]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["bytes"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["str"]],["bool"]]],[11,"as_ref",E,E,9,[[["self"]]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"from_buf",E,E,10,[[[T]],[R[144]]]],[11,"from_buf",E,E,9,[[[T]],["bytes"]]],[11,R[145],E,E,10,[[[T]],[R[144]]]],[11,R[145],E,E,10,[[[T]],[R[144]]]],[11,R[145],E,E,9,[[[T]],["bytes"]]],[11,R[145],E,E,9,[[[T]],["bytes"]]],[11,R[146],E,E,10,[[]]],[11,R[146],E,E,9,[[]]],[11,"cmp",E,E,10,[[["self"],[R[144]]],[R[78]]]],[11,"cmp",E,E,9,[[["self"],["bytes"]],[R[78]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"from",E,E,9,[[["headername"]],["bytes"]]],[11,"from",E,E,9,[[["bytestr"]],["bytes"]]],[11,"from",E,E,9,[[["custom"]],["bytes"]]],[11,"from",E,E,9,[[["scheme"]],["bytes"]]],[11,"from",E,E,9,[[[R[143]]],["bytes"]]],[11,"from",E,E,9,[[["authority"]],["bytes"]]],[11,"from",E,E,9,[[["pathandquery"]],["bytes"]]],[11,"path",E,E,2,[[["self"]],["str"]]],[11,R[147],E,E,2,[[["self"]],[[R[76]],[R[35],[R[34]]],[R[31],[R[76],R[35]]]]]],[11,R[36],E,E,2,[[["self"]],[[R[31],[R[17],R[34]]],[R[17]],[R[34]]]]],[11,"path",E,E,3,[[["self"]],["str"]]],[11,R[147],E,E,3,[[["self"]],[[R[76]],[R[35],[R[34]]],[R[31],[R[76],R[35]]]]]],[11,R[36],E,E,3,[[["self"]],[[R[31],[R[17],R[34]]],[R[17]],[R[34]]]]],[11,R[148],E,E,3,[[["self"],[R[31]]]]],[11,"path",E,E,5,[[["self"]],["str"]]],[11,R[147],E,E,5,[[["self"]],[[R[76]],[R[35],[R[34]]],[R[31],[R[76],R[35]]]]]],[11,R[36],E,E,5,[[["self"]],[[R[31],[R[17],R[34]]],[R[17]],[R[34]]]]],[11,R[148],E,E,5,[[["self"],[R[31]]]]],[11,"register",E,E,2,[[[R[149]]]]],[11,"register",E,E,3,[[[R[149]]]]],[11,"new_service",E,E,4,[[["self"]]]],[11,R[150],E,E,2,[[],[T]]],[11,R[152],E,"Creates a new `Bytes` with the specified capacity.",9,[[["usize"]],["bytes"]]],[11,"new",E,"Creates a new empty `Bytes`.",9,[[],["bytes"]]],[11,"from_static",E,"Creates a new `Bytes` from a static slice.",9,[[],["bytes"]]],[11,"len",E,"Returns the number of bytes contained in this `Bytes`.",9,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if the `Bytes` has a length of 0.",9,[[["self"]],["bool"]]],[11,"slice",E,"Returns a slice of self for the index range `[begin..end)`.",9,[[["self"],["usize"]],["bytes"]]],[11,"slice_from",E,"Returns a slice of self for the index range…",9,[[["self"],["usize"]],["bytes"]]],[11,"slice_to",E,"Returns a slice of self for the index range `[0..end)`.",9,[[["self"],["usize"]],["bytes"]]],[11,"slice_ref",E,"Returns a slice of self that is equivalent to the given…",9,[[["self"]],["bytes"]]],[11,R[153],E,R[151],9,[[["self"],["usize"]],["bytes"]]],[11,"split_to",E,R[151],9,[[["self"],["usize"]],["bytes"]]],[11,"truncate",E,R[154],9,[[["self"],["usize"]]]],[11,"advance",E,R[155],9,[[["self"],["usize"]]]],[11,"clear",E,R[156],9,[[["self"]]]],[11,"try_mut",E,"Attempts to convert into a `BytesMut` handle.",9,[[],[[R[144]],["bytes"],[R[16],[R[144],"bytes"]]]]],[11,R[157],E,R[158],9,[[["self"]]]],[11,R[152],E,"Creates a new `BytesMut` with the specified capacity.",10,[[["usize"]],[R[144]]]],[11,"new",E,"Creates a new `BytesMut` with default capacity.",10,[[],[R[144]]]],[11,"len",E,"Returns the number of bytes contained in this `BytesMut`.",10,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if the `BytesMut` has a length of 0.",10,[[["self"]],["bool"]]],[11,"capacity",E,"Returns the number of bytes the `BytesMut` can hold…",10,[[["self"]],["usize"]]],[11,"freeze",E,"Converts `self` into an immutable `Bytes`.",10,[[],["bytes"]]],[11,R[153],E,R[151],10,[[["self"],["usize"]],[R[144]]]],[11,"take",E,"Removes the bytes from the current view, returning them in…",10,[[["self"]],[R[144]]]],[11,"split_to",E,"Splits the buffer into two at the given index.",10,[[["self"],["usize"]],[R[144]]]],[11,"truncate",E,R[154],10,[[["self"],["usize"]]]],[11,"advance",E,R[155],10,[[["self"],["usize"]]]],[11,"clear",E,R[156],10,[[["self"]]]],[11,"resize",E,"Resizes the buffer so that `len` is equal to `new_len`.",10,[[["self"],["usize"],["u8"]]]],[11,"set_len",E,"Sets the length of the buffer.",10,[[["self"],["usize"]]]],[11,"reserve",E,"Reserves capacity for at least `additional` more bytes to…",10,[[["self"],["usize"]]]],[11,R[157],E,R[158],10,[[["self"]]]],[11,"unsplit",E,"Combine splitted BytesMut objects back as contiguous.",10,[[["self"],[R[144]]]]],[11,"new",E,"Create new `Data` instance.",11,[[[T]],["data"]]],[11,"get_ref",E,"Get reference to inner app data.",11,[[["self"]],[T]]],[11,R[172],E,R[173],0,[[],[T]]],[11,"limit",E,"Change max size of payload. By default max size is 16Kb",12,[[["usize"]],[R[133]]]],[11,R[174],E,R[175],12,[[["f"]],[R[133]]]],[11,"head",E,"This method returns reference to the request head",13,[[["self"]],["requesthead"]]],[11,"uri",E,"Request's uri.",13,[[["self"]],["uri"]]],[11,"method",E,"Read the Request method.",13,[[["self"]],["method"]]],[11,R[84],E,"Read the Request Version.",13,[[["self"]],[R[84]]]],[11,"headers",E,"Returns request's headers.",13,[[["self"]],[R[159]]]],[11,"path",E,"The target path of this Request.",13,[[["self"]],["str"]]],[11,"query_string",E,"The query string in the URL.",13,[[["self"]],["str"]]],[11,"match_info",E,"Get a reference to the Path parameters.",13,[[["self"]],["path"]]],[11,R[135],E,R[160],13,[[["self"]],[["ref",[R[135]]],[R[135]]]]],[11,R[161],E,R[162],13,[[["self"]],[["refmut",[R[135]]],[R[135]]]]],[11,"url_for",E,R[164],13,[[[U],["self"],["str"]],[[R[16],["url",R[163]]],["url"],[R[163]]]]],[11,"url_for_static",E,R[164],13,[[["self"],["str"]],[[R[16],["url",R[163]]],["url"],[R[163]]]]],[11,"resource_map",E,"Get a reference to a `ResourceMap` of current application.",13,[[["self"]],["resourcemap"]]],[11,"peer_addr",E,"Peer socket address",13,[[["self"]],[[R[165]],[R[27],[R[165]]]]]],[11,"connection_info",E,"Get ConnectionInfo for the current request.",13,[[["self"]],[["ref",[R[166]]],[R[166]]]]],[11,"app_config",E,"App config",13,[[["self"]],["appconfig"]]],[11,"app_data",E,R[167],13,[[["self"]],[[T],[R[27]]]]],[11,"get_app_data",E,R[167],13,[[["self"]],[["data"],[R[27],["data"]]]]],[11,"Ok",E,E,14,[[],[R[168]]]],[11,"Created",E,E,14,[[],[R[168]]]],[11,"Accepted",E,E,14,[[],[R[168]]]],[11,"NonAuthoritativeInformation",E,E,14,[[],[R[168]]]],[11,"NoContent",E,E,14,[[],[R[168]]]],[11,"ResetContent",E,E,14,[[],[R[168]]]],[11,"PartialContent",E,E,14,[[],[R[168]]]],[11,"MultiStatus",E,E,14,[[],[R[168]]]],[11,"AlreadyReported",E,E,14,[[],[R[168]]]],[11,"MultipleChoices",E,E,14,[[],[R[168]]]],[11,"MovedPermanenty",E,E,14,[[],[R[168]]]],[11,"MovedPermanently",E,E,14,[[],[R[168]]]],[11,"Found",E,E,14,[[],[R[168]]]],[11,"SeeOther",E,E,14,[[],[R[168]]]],[11,"NotModified",E,E,14,[[],[R[168]]]],[11,"UseProxy",E,E,14,[[],[R[168]]]],[11,"TemporaryRedirect",E,E,14,[[],[R[168]]]],[11,"PermanentRedirect",E,E,14,[[],[R[168]]]],[11,"BadRequest",E,E,14,[[],[R[168]]]],[11,"NotFound",E,E,14,[[],[R[168]]]],[11,"Unauthorized",E,E,14,[[],[R[168]]]],[11,"PaymentRequired",E,E,14,[[],[R[168]]]],[11,"Forbidden",E,E,14,[[],[R[168]]]],[11,"MethodNotAllowed",E,E,14,[[],[R[168]]]],[11,"NotAcceptable",E,E,14,[[],[R[168]]]],[11,"ProxyAuthenticationRequired",E,E,14,[[],[R[168]]]],[11,"RequestTimeout",E,E,14,[[],[R[168]]]],[11,"Conflict",E,E,14,[[],[R[168]]]],[11,"Gone",E,E,14,[[],[R[168]]]],[11,"LengthRequired",E,E,14,[[],[R[168]]]],[11,"PreconditionFailed",E,E,14,[[],[R[168]]]],[11,"PreconditionRequired",E,E,14,[[],[R[168]]]],[11,"PayloadTooLarge",E,E,14,[[],[R[168]]]],[11,"UriTooLong",E,E,14,[[],[R[168]]]],[11,"UnsupportedMediaType",E,E,14,[[],[R[168]]]],[11,"RangeNotSatisfiable",E,E,14,[[],[R[168]]]],[11,"ExpectationFailed",E,E,14,[[],[R[168]]]],[11,"UnprocessableEntity",E,E,14,[[],[R[168]]]],[11,"TooManyRequests",E,E,14,[[],[R[168]]]],[11,"InternalServerError",E,E,14,[[],[R[168]]]],[11,"NotImplemented",E,E,14,[[],[R[168]]]],[11,"BadGateway",E,E,14,[[],[R[168]]]],[11,"ServiceUnavailable",E,E,14,[[],[R[168]]]],[11,"GatewayTimeout",E,E,14,[[],[R[168]]]],[11,"VersionNotSupported",E,E,14,[[],[R[168]]]],[11,"VariantAlsoNegotiates",E,E,14,[[],[R[168]]]],[11,"InsufficientStorage",E,E,14,[[],[R[168]]]],[11,"LoopDetected",E,E,14,[[],[R[168]]]],[11,"build",E,"Create http response builder with specific status.",14,[[[R[169]]],[R[168]]]],[11,"build_from",E,"Create http response builder",14,[[[T]],[R[168]]]],[11,"new",E,"Constructs a response",14,[[[R[169]]],[["body"],[R[141],["body"]]]]],[11,"from_error",E,"Constructs an error response",14,[[["error"]],[["body"],[R[141],["body"]]]]],[11,"into_body",E,"Convert response to response with body",14,[[],[R[141]]]],[11,"with_body",E,"Constructs a response with body",14,[[[R[169]],["b"]],[R[141]]]],[11,"head",E,"Http message part of the response",14,[[["self"]],[R[170]]]],[11,"head_mut",E,"Mutable reference to a http message part of the response",14,[[["self"]],[R[170]]]],[11,"error",E,"The source `error` for this response",14,[[["self"]],[[R[27],["error"]],["error"]]]],[11,"status",E,"Get the response status code",14,[[["self"]],[R[169]]]],[11,"status_mut",E,"Set the `StatusCode` for this response",14,[[["self"]],[R[169]]]],[11,"headers",E,"Get the headers from the response",14,[[["self"]],[R[159]]]],[11,"headers_mut",E,"Get a mutable reference to the headers",14,[[["self"]],[R[159]]]],[11,"cookies",E,"Get an iterator for the cookies set by this response",14,[[["self"]],["cookieiter"]]],[11,"add_cookie",E,"Add a cookie to this response",14,[[["self"],["cookie"]],[["error"],[R[16],["error"]]]]],[11,"del_cookie",E,"Remove all cookies with the given name from this response.…",14,[[["self"],["str"]],["usize"]]],[11,"upgrade",E,"Connection upgrade status",14,[[["self"]],["bool"]]],[11,"keep_alive",E,"Keep-alive status for this connection",14,[[["self"]],["bool"]]],[11,R[135],E,"Responses extensions",14,[[["self"]],[["ref",[R[135]]],[R[135]]]]],[11,R[161],E,"Mutable reference to a the response's extensions",14,[[["self"]],[["refmut",[R[135]]],[R[135]]]]],[11,"body",E,"Get body os this response",14,[[["self"]],[R[171]]]],[11,"set_body",E,"Set a body",14,[[["b2"]],[R[141]]]],[11,"into_parts",E,"Split response and body",14,[[]]],[11,"drop_body",E,"Drop request's body",14,[[],[R[141]]]],[11,"map_body",E,"Set a body and return previous body value",14,[[["f"]],[R[141]]]],[11,"take_body",E,"Extract response body",14,[[["self"]],[R[171]]]],[11,R[172],E,R[173],1,[[],[T]]],[11,"limit",E,"Change max size of payload. By default max size is 32Kb",15,[[["usize"]],[R[129]]]],[11,R[174],E,R[175],15,[[["f"]],[R[129]]]],[11,"content_type",E,"Set predicate for allowed content types",15,[[["f"]],[R[129]]]],[11,R[172],E,R[173],16,[[],[T]]],[11,R[174],E,R[175],17,[[["f"]],[R[130]]]],[11,"new",E,"Create `PayloadConfig` instance and set max size of payload.",19,[[["usize"]],[R[132]]]],[11,"limit",E,"Change max size of payload. By default max size is 256Kb",19,[[["usize"]],[R[132]]]],[11,"mimetype",E,"Set required mime-type of the request. By default mime…",19,[[["mime"]],[R[132]]]],[11,R[172],E,"Deconstruct to a inner value",20,[[],[T]]],[11,"from_query",E,"Get query parameters from the path",20,[[["str"]],[[R[176]],["query"],[R[16],["query",R[176]]]]]],[11,R[174],E,R[175],21,[[["f"]],[R[131]]]]],"p":[[3,"Form"],[3,"Json"],[3,R[177]],[3,"Scope"],[3,"Route"],[3,R[178]],[8,R[179]],[8,R[180]],[3,"App"],[3,"Bytes"],[3,"BytesMut"],[3,"Data"],[3,R[181]],[3,R[182]],[3,R[183]],[3,R[184]],[3,"Path"],[3,R[185]],[3,"Payload"],[3,R[186]],[3,"Query"],[3,R[187]]]};
searchIndex["paperclip_actix_macros"]={"doc":"Convenience macros for the actix-web OpenAPI plugin.","i":[[23,"api_v2_operation","paperclip_actix_macros","Marker attribute for indicating that a function is an…",N,N],[23,R[0],E,"Marker attribute for indicating that an object is an…",N,N]],"p":[]};
searchIndex["paperclip_macros"]={"doc":"Convenience macros for paperclip.","i":[[23,R[0],"paperclip_macros","Converts your struct to support deserializing from an…",N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);